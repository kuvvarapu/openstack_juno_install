#!/bin/bash
#This script is used to Install and configure neutron
#Author kiku

novaadmintenantid=$(keystone tenant-list | awk '/service/ { print $2}')

#database configuration

mysql -u root -ptoor << EODs
CREATE DATABASE neutron;
GRANT ALL PRIVILEGES ON neutron.* TO 'neutron'@'localhost' \
  IDENTIFIED BY 'neutron';
GRANT ALL PRIVILEGES ON neutron.* TO 'neutron'@'%' \
  IDENTIFIED BY 'neutron';
EODs

#Create neutron user
keystone user-create --name neutron --pass neutron
#Link neutron user to the service tenant and admin role
keystone user-role-add --user neutron --tenant service --role admin
#Create neutron service
keystone service-create --name neutron --type network --description "Openstack Networking"
#Create the identity endpoint
keystone endpoint-create \
  --service-id $(keystone service-list | awk '/ network / {print $2}') \
  --publicurl http://controller:9696 \
  --adminurl http://controller:9696 \
  --internalurl http://controller:9696 \
  --region regionOne

#Install Network components
apt-get install neutron-server neutron-plugin-ml2 python-neutronclient -y
#Neutron config backup
cp /etc/neutron/neutron.conf /etc/neutron/neutron_bkp.conf

#configure Neutron Server
#Change Database Path
       # sed -i 's/connection=sqlite:\/\/\/\/var\/lib\/neutron\/neutron.sqlite /connection=mysql:\/\/neutron:neutron@controller\/neutron #kiku/g' /etc/neutron/neutron.conf
#connection = sqlite:////var/lib/neutron/neutron.sqlite
sed -i 's/connection = sqlite:\/\/\/\/var\/lib\/neutron\/neutron.sqlite/connection=mysql:\/\/neutron:neutron@controller\/neutron /g' /etc/neutron/neutron.conf 

#rpc backend
sed -i '/#control_exchange=openstack/ i rpc_backend = rabbit \
rabbit_host = controller \
rabbit_password = guest' /etc/neutron/neutron.conf

#auth_strategy
 sed -i 's/# auth_strategy/auth_strategy/' /etc/neutron/neutron.conf 

#auth_keystone

#configure keystone_authtoken (disable default settings)
        sed -i 's/auth_host/#auth_host/' /etc/neutron/neutron.conf
        sed -i 's/auth_port/#auth_port/' /etc/neutron/neutron.conf
        sed -i 's/auth_protocol/#auth_protocol/' /etc/neutron/neutron.conf
        sed -i 's/admin_password/#admin_password/' /etc/neutron/neutron.conf
        sed -i 's/admin_tenant_name/#admin_tenant_name/' /etc/neutron/neutron.conf
	sed -i 's/admin_user/#admin_user/' /etc/neutron/neutron.conf
# Keystone_authtoken New settings
sed -i '/keystone_authtoken/ a \
auth_uri = http://controller:5000/v2.0 \
identity_uri = http://controller:35357 \
admin_tenant_name = service \
admin_user = neutron \
admin_password = neutron' /etc/neutron/neutron.conf

# enable the Modular Layer 2 (ML2) plug-in, router service, and overlapping IP addresses
sed -i '/# verbose = / a core_plugin = ml2 \
service_plugins = router \
allow_overlapping_ips = True \
verbose = true \
#configure Networking to notify Compute of network topology changes \
notify_nova_on_port_status_changes = True \
notify_nova_on_port_data_changes = True \
nova_url = http://controller:8774/v2 \
nova_admin_auth_url = http://controller:35357/v2.0 \
nova_region_name = regionOne \
nova_admin_username = nova \
nova_admin_tenant_id = ${novaadmintenantid} \
nova_admin_password = nova' /etc/neutron/neutron.conf

#/etc/neutron/plugins/ml2/ml2_conf.ini

sed -i '/hosts/ a type_drivers = flat,gre \
tenant_network_types = gre \
mechanism_drivers = openvswitch ' /etc/neutron/plugins/ml2/ml2_conf.ini

#configure the tunnel identifier (id) range                               
sed -i '/ml2_type_gre/ a \
tunnel_id_ranges = 1:1000' /etc/neutron/plugins/ml2/ml2_conf.ini

#configure Security group

sed -i '/securitygroup/ a \
enable_security_group = True \
enable_ipset = True \
firewall_driver = neutron.agent.linux.iptables_firewall.OVSHybridIptablesFirewallDriver' /etc/neutron/plugins/ml2/ml2_conf.ini

/bin/sh -c "neutron-db-manage --config-file /etc/neutron/neutron.conf \
  --config-file /etc/neutron/plugins/ml2/ml2_conf.ini upgrade juno" neutron

service neutron-server restart
neutron agent-list
